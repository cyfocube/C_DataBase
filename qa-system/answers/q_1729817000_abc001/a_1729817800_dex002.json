{
  "id": "a_1729817800_dex002",
  "question_id": "q_1729817000_abc001",
  "content": "Adding to @DeFiVet's excellent answer, here are some advanced security considerations I learned the hard way:\n\n## Price Manipulation Attacks\n\n```solidity\n// DON'T DO THIS - vulnerable to manipulation\nfunction badPriceCheck() external {\n    uint256 price = (reserveA * 1e18) / reserveB;\n    require(price > lastKnownPrice * 95 / 100, 'Price dropped too much');\n}\n\n// DO THIS - use time-weighted average prices (TWAP)\nfunction securePriceCheck() external {\n    uint256 twapPrice = getTimeWeightedPrice(3600); // 1 hour TWAP\n    uint256 currentPrice = getCurrentPrice();\n    require(\n        currentPrice > twapPrice * 90 / 100 && \n        currentPrice < twapPrice * 110 / 100,\n        'Price deviation too high'\n    );\n}\n```\n\n## MEV Protection\n\nConsider implementing commit-reveal schemes or using services like Flashbots Protect:\n\n```solidity\nstruct CommitReveal {\n    bytes32 commitment;\n    uint256 blockNumber;\n    bool revealed;\n}\n\nmapping(address => CommitReveal) public commitments;\n\nfunction commitSwap(bytes32 _commitment) external {\n    commitments[msg.sender] = CommitReveal({\n        commitment: _commitment,\n        blockNumber: block.number,\n        revealed: false\n    });\n}\n\nfunction revealAndSwap(\n    uint256 amount,\n    uint256 nonce\n) external {\n    require(block.number > commitments[msg.sender].blockNumber + 1, 'Too early');\n    require(block.number < commitments[msg.sender].blockNumber + 10, 'Too late');\n    \n    bytes32 hash = keccak256(abi.encodePacked(msg.sender, amount, nonce));\n    require(hash == commitments[msg.sender].commitment, 'Invalid reveal');\n    \n    // Perform swap\n}\n```\n\n## Gas Optimization Tips\n\n1. **Pack structs efficiently** - save on storage slots\n2. **Use assembly for math** where safe\n3. **Batch operations** when possible\n4. **Consider EIP-1559** for better fee prediction\n\nAudit firms to consider: Trail of Bits, ConsenSys Diligence, Certik, or Quantstamp. Budget $20-50k for a thorough audit.\n\nSource: Built 3 DEXs, 2 got rekt by flash loans before I learned these lessons ðŸ˜…",
  "author_wallet": "0x6666777788889999000011112222333344445555",
  "author_name": "AuditAndy",
  "created_at": "2025-10-24T08:40:00Z",
  "updated_at": "2025-10-24T08:40:00Z",
  "votes": 15,
  "is_accepted": false,
  "parent_answer_id": null,
  "reply_count": 1,
  "depth": 0,
  "code_snippets": [
    {
      "language": "solidity", 
      "code": "function securePriceCheck() external {\n    uint256 twapPrice = getTimeWeightedPrice(3600);\n    uint256 currentPrice = getCurrentPrice();\n    require(currentPrice > twapPrice * 90 / 100 && currentPrice < twapPrice * 110 / 100, 'Price deviation too high');\n}"
    }
  ],
  "helpful_votes": 14,
  "spam_reports": 0
}